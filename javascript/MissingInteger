// This is a demo task.
// Write a function:
// that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.
// For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.
// Given A = [1, 2, 3], the function should return 4.
// Given A = [−1, −3], the function should return 1.
// Write an efficient algorithm for the following assumptions:
// N is an integer within the range [1..100,000];
// each element of array A is an integer within the range [−1,000,000..1,000,000].

function solution(A) {
  let sorted = A.sort((a,b)=>a-b)
  
  let new_num = sorted[0]
  let lowest_int = 0

  for (let i = 0; i < sorted.length; i++){
    if(new_num == sorted[i]){
      new_num = sorted[i]
      continue
    } else if(new_num == sorted[i] - 1){
      new_num = sorted[i]
      continue
    } else if (sorted[i] != (new_num + 1)){
      lowest_int = new_num + 1
      if(lowest_int < 0){
          return 1
      }
      return lowest_int
    }
  }

  return sorted.pop() + 1
}
