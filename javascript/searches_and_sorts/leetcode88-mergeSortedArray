/**
 * @param {number[]} nums1
 * @param {number} m
 * @param {number[]} nums2
 * @param {number} n
 * @return {void} Do not return anything, modify nums1 in-place instead.
 */
var merge = function(nums1, m, nums2, n) {
    // last index pointer in nums1
    let lastIndex = m + n - 1
    
    while( m > 0 && n > 0){
        if(nums1[m - 1] < nums2[n - 1]) {
            nums1[lastIndex] = nums2[n - 1]
            n--
        } else {
            nums1[lastIndex] = nums1[m - 1]
            m--
        }
        lastIndex = lastIndex - 1
    }

    while (n > 0) {
        nums1[lastIndex] = nums2[n - 1]
        n--
    }

    console.log(nums1)
    console.log(nums2)
    console.log(n)
};

// lastIndex: 5

// [1, 2, 2, 0, 0, 0]
// m = 3

// [3, 5, 6]
// n = 3
merge(nums1 = [0], m = 0, nums2 = [1], n = 1)
merge(nums1 = [1,2, 3, 0, 0, 0], m = 3, nums2 = [2, 5, 6], n = 3)
